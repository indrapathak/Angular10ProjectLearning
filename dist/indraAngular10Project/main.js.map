{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/add-user/add-user.component.ts","./src/app/add-user/add-user.component.html","./src/app/user-service.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/user-list/user-list.component.html","./src/app/user-list/user-list.component.ts","./src/app/app.module.ts","./src/app/update-user/update-user.component.ts","./src/app/update-user/update-user.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserServiceService } from '../user-service.service';\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  alert : boolean = false;\n\n  registerUser = new FormGroup({\n    name: new FormControl(''),\n    email: new FormControl(''),\n    password: new FormControl(''),\n    mobile: new FormControl('')\n\n  })\n\n  constructor(private user: UserServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n  register() {\n    console.warn(\"The data that is recieved from the form is \", this.registerUser.value)\n    \n    this.user.saveUser(this.registerUser.value).subscribe((result)=>{\n      console.warn(\"the result of register user API is \",result);\n      this.alert=true;\n      this.registerUser.reset({})\n\n    })\n  }\n\n  closeAlert()\n  {\n    this.alert=false\n  }\n\n\n\n}\n","\n<h1>Register User</h1>\n\n<div *ngIf=\"alert\" class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n  <strong>User Registered !</strong> User Registration is succesful.\n  <button (click)=\"closeAlert()\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n\n\n<form [formGroup]=\"registerUser\"  (ngSubmit)=\"register()\">\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Name</label>\n    <input type=\"text\" class=\"form-control\" formControlName=\"name\" aria-describedby=\"emailHelp\" placeholder=\"Enter Name\">\n   \n  </div>\n   <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Email</label>\n    <input type=\"text\" class=\"form-control\"  formControlName=\"email\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email\">\n\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Mobile</label>\n    <input type=\"text\" class=\"form-control\" formControlName=\"mobile\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter Mobile\">\n    \n  </div>\n  \n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">Password</label>\n    <input type=\"password\" class=\"form-control\"  formControlName=\"password\" id=\"exampleInputPassword1\" placeholder=\"Enter Password\">\n  </div>\n  \n  \n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserServiceService } from '../user-service.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n\n  alert : boolean = false;\n  addUser = new FormGroup({\n    name: new FormControl(''),\n    email: new FormControl(''),\n    mobile: new FormControl(''),\n    userType: new FormControl(''),\n    companyId: new FormControl('5fb60fefd825673314d2e1b0'),\n    password: new FormControl('')\n\n  })\n\n\n\n  constructor(private user: UserServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n  collectUser() {\n    console.warn(\"The data that is recieved from the form is \", this.addUser.value)\n    \n    this.user.saveUser(this.addUser.value).subscribe((result)=>{\n      console.warn(\"the result of add user API is \",result);\n      this.alert=true;\n      this.addUser.reset({})\n    })\n  }\n\n  closeAlert()\n  {\n    this.alert=false\n  }\n\n}\n","\r\n<div *ngIf=\"alert\" class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n  <strong>User Added Succesfully!</strong> Your User Addition is succesful.\r\n  <button (click)=\"closeAlert()\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<h6>Add User Details</h6>\r\n<form [formGroup]=\"addUser\"  (ngSubmit)=\"collectUser()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputEmail1\">Name</label>\r\n    <input type=\"text\" class=\"form-control\" formControlName=\"name\" aria-describedby=\"emailHelp\" placeholder=\"Enter Name\">\r\n   \r\n  </div>\r\n   <div class=\"form-group\">\r\n    <label for=\"exampleInputEmail1\">Email</label>\r\n    <input type=\"text\" class=\"form-control\"  formControlName=\"email\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email\">\r\n   \r\n  </div>\r\n   <div class=\"form-group\">\r\n    <label for=\"exampleInputEmail1\">Mobile</label>\r\n    <input type=\"text\" class=\"form-control\" formControlName=\"mobile\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter Mobile\">\r\n\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputPassword1\">User Type</label>\r\n    <input type=\"text\" class=\"form-control\"  formControlName=\"userType\" id=\"exampleInputPassword1\" placeholder=\"Enter User Type\">\r\n  </div>\r\n\r\n <div class=\"form-group\">\r\n    <label for=\"exampleInputPassword1\">CompanyId</label>\r\n    <input type=\"text\" class=\"form-control\"  formControlName=\"companyId\" id=\"exampleInputPassword1\" placeholder=\"Enter Company Id\" >\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputPassword1\">Password</label>\r\n    <input type=\"text\" class=\"form-control\"  formControlName=\"password\" id=\"exampleInputPassword1\" placeholder=\"Enter Password\">\r\n  </div>\r\n  \r\n  \r\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n url  = \"http://localhost:5050/user\"\n  constructor(private http : HttpClient) {}\n  getAPIData()\n  {\n     console.warn(\"the get API data function is called \")\n     return this.http.get(this.url)\n  }\n\n  saveUser(data)\n  {\n    console.warn(\"The data recieved in the user services\",data)\n    return this.http.post(this.url,data);\n  }\n\n  //Delete User Function is not working as backend is not getting email Need check for this\n  deleteUserData(data)\n  {\n    \n    console.log(\"the deletion key in delete User Data in services is\",data)\n    return this.http.delete(`${this.url}/${data}`)\n  }\n\n  getCurrentUser(key)\n  {\n     console.warn(\"the get API data function is called \",key,`${this.url}/${key}`)\n     return this.http.get(`${this.url}/${key}`)\n  }\n\n  updateUserData(key,data)\n  {\n     console.warn(\"the Update API data function is called \",key,`${this.url}/${key}`)\n     return this.http.put(`${this.url}/${key}`,data)\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'indraAngular10Project';\n}\n","<nav class=\"navbar navbar-expand-sm navbar-light bg-light\">\n  <a class=\"navbar-brand\" routerLink=\"\">Angular 10 Project</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item active\">\n       <a  class=\"nav-item active\" routerLink=\"add\">Add User </a>\n      </li>\n     \n      <li class=\"nav-item active\">\n       <a class=\"nav-item active\" routerLink=\"register\">Register User </a>\n      </li>\n  <!--    <li class=\"nav-item active\">\n        <a  class=\"nav-item active\"  routerLink=\"login\">Login </a>\n      </li> -->\n      <li class=\"nav-item active\">\n        <a  class=\"nav-item active\" routerLink=\"\">User List</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<div class=\"container\" >\n<router-outlet></router-outlet>\n<footer>\n<p>Register Your User Here</p>\n</footer>\n</div>\n","<h1>User List</h1>\n<table class=\"table\">\n  <thead>\n    <tr>\n     \n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Email</th>\n      <th scope=\"col\">Mobile</th>\n      <th scope=\"col\">User Type</th>\n      <th scope=\"col\">Operations</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let item of collection\">\n     \n      <td>{{item.name}} </td>\n      <td>{{item.email}} </td>\n      <td>{{item.mobile}} </td>\n      <td>{{item.userType}} </td>\n      <td><i (click)=\"deleteUser(item.email)\" class=\"fa fa-trash\" style=\"font-size:20px;color:red;\"></i>\n      <i routerLink=\"/update/{{item.email}}\" class=\"fa fa-edit\" style=\"font-size:20px;color:green;\"></i></td>\n\n    </tr>\n  \n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport {UserServiceService} from '../user-service.service' ;\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n  collection=[]\n  constructor(private user:UserServiceService) {}\n  ngOnInit(): void {\n    this.user.getAPIData().subscribe((data=>{\n      console.warn(\"the data recieved is \",data)\n      this.collection=data[\"data\"]\n      console.log(\"collections element\" ,this.collection[1].name)\n    }))\n  }\n\n  deleteUser(deletionKey)\n  {\n    this.collection.splice(deletionKey-1,1)\n    console.log(\"the deleteuser function is called with deletionKey\",deletionKey)\n    this.user.deleteUserData(deletionKey).subscribe(result=>{\n      console.warn(\"the result from the user deletion is\",result)\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { UpdateUserComponent } from './update-user/update-user.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddUserComponent,\n    UpdateUserComponent,\n    LoginComponent,\n    RegisterComponent,\n    UserListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport {ActivatedRoute}  from '@angular/router';\nimport { UserServiceService } from '../user-service.service'\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\nexport class UpdateUserComponent implements OnInit {\n\n  alert : boolean = false;\n\n  updateUser = new FormGroup({\n    name: new FormControl(''),\n    email: new FormControl(''),\n    mobile: new FormControl(''),\n    userType: new FormControl(''),\n    companyId: new FormControl('5fb60fefd825673314d2e1b0'),\n    password: new FormControl('')\n\n  })\n\n  constructor(private route : ActivatedRoute , private user : UserServiceService) { }\n\n  ngOnInit(): void {\n    console.warn(\"The Key for updating is\",this.route.snapshot.params.email)\n    this.user.getCurrentUser(this.route.snapshot.params.email).subscribe(result=>{\n      console.warn(\"the result of get current user function\",result[\"data\"][0].name)\n      this.updateUser = new FormGroup({\n        name: new FormControl(result[\"data\"][0].name),\n        mobile: new FormControl(result[\"data\"][0].mobile),\n        userType: new FormControl(result[\"data\"][0].userType),\n        password: new FormControl(result[\"data\"][0].password)\n    \n      })\n    })\n  }\n\n  collect()\n  {\n    console.log(\"the update user details are\",this.updateUser.value)\n    this.user.updateUserData(this.route.snapshot.params.email,this.updateUser.value).subscribe(result=>{\n      console.warn(\"the result of get current user function\",result[\"data\"])\n      this.alert=true;\n      console.log(\"the alert value is\",this.alert)\n     \n    })\n  }\n\n closeAlert()\n  {\n    this.alert=false\n  }\n\n}\n","<h1>Update User Details</h1>\n<div *ngIf=\"alert\" class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n  <strong>User Updated Succesfully!</strong> Your User Updation is succesful.\n  <button (click)=\"closeAlert()\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<form [formGroup]=\"updateUser\" (ngSubmit)=\"collect()\" >\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Name</label>\n    <input type=\"text\" class=\"form-control\" formControlName=\"name\" aria-describedby=\"emailHelp\" placeholder=\"Enter Name\">\n   \n  </div>\n \n   <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Mobile</label>\n    <input type=\"text\" class=\"form-control\" formControlName=\"mobile\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter Mobile\">\n   \n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">User Type</label>\n    <input type=\"text\" class=\"form-control\"  formControlName=\"userType\" id=\"exampleInputPassword1\" placeholder=\"Enter User Type\">\n  </div>\n\n\n\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">Password</label>\n    <input type=\"text\" class=\"form-control\"  formControlName=\"password\" id=\"exampleInputPassword1\" placeholder=\"Enter Password\">\n  </div>\n  \n  \n  <button type=\"submit\" class=\"btn btn-primary\">Update</button>\n</form>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {AddUserComponent} from './add-user/add-user.component';\nimport {UpdateUserComponent} from './update-user/update-user.component' ;\nimport {RegisterComponent} from './register/register.component';\nimport {LoginComponent}  from './login/login.component';\nimport {UserListComponent} from './user-list/user-list.component' ;\n\n\n\nconst routes: Routes = [\n  {\n    component : AddUserComponent,\n    path : \"add\"\n  },\n  {\n    component : UpdateUserComponent,\n    path : \"update/:email\"\n  },\n  {\n    component : RegisterComponent,\n    path : \"register\"\n  },\n  {\n    component : LoginComponent,\n    path : \"login\"\n  },\n  {\n    component : UserListComponent,\n    path : \"\"\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}